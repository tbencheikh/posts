'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports.getFile = getFile;
exports.create = create;
exports.remove = remove;
var fs = require('fs');
var cp = require('child_process');
var mkdirp = require('mkdirp');
var untildify = require('untildify');

var dir = untildify('~/Library/LaunchAgents');

exports.dir = dir;

function getFile(name) {
  return '' + dir + '/' + name + '.plist';
}

function create(name, cmd, args, out) {
  var array = [cmd].concat(args).map(function (a) {
    return '    <string>' + a + '</string>';
  }).join('\n');

  var file = getFile(name);

  var data = ['<?xml version="1.0" encoding="UTF-8"?>', '<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">', '<plist version="1.0">', '<dict>', '  <key>Label</key>', '  <string>' + name + '</string>', '  <key>ProgramArguments</key>', '  <array>', array, '  </array>', '  <key>RunAtLoad</key>', '  <true/>', '  <key>StandardOutPath</key>', '  <string>' + out + '</string>', '  <key>StandardErrorPath</key>', '  <string>' + out + '</string>', '</dict>', '</plist>'].join('\n');

  mkdirp.sync(dir);
  fs.writeFileSync(file, data);

  cp.execSync('launchctl load ' + file);
}

function remove(name) {
  var file = getFile(name);
  if (fs.existsSync(file)) fs.unlinkSync(file);
  try {
    cp.execSync('launchctl remove ' + name);
  } catch (e) {}
}